@using Microsoft.AspNetCore.Http
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels
@using Microsoft.AspNetCore.Mvc.Rendering
@using Umbraco.Cms.Core.Models
@using Umbraco.Cms.Core.Routing
@using Umbraco.Cms.Web.Common
@inherits Umbraco.Cms.Web.Common.Macros.PartialViewMacroPage
@inject UmbracoHelper Umbraco
@inject IPublishedUrlProvider PublishedUrlProvider
@inject IHttpContextAccessor HttpContextAccessor
@{
    var startNodeId = Model.MacroParameters["startNodeId"] ?? Model.Content.Id;

    var numberOfPosts = 3;
    if (Model.MacroParameters["numberOfPosts"] != null)
    {
        int.TryParse((string)Model.MacroParameters["numberOfPosts"], out numberOfPosts);
    }
}

@if (startNodeId != null)
{
    @* Get the starting page *@
    var startNode = Umbraco.Content(startNodeId);

    if (startNode == null)
    {
        <div class="blogposts">
            <h1>There are no posts at this time, try again later.</h1>
        </div>

        return;
    }

    var httpContext = HttpContextAccessor.HttpContext;

    //Gets all blogposts to calculate pages
    var blogposts = startNode.Children.OrderByDescending(x => x.CreateDate).ToList();
    var pageCount = (int)Math.Ceiling((double)blogposts.Count / (double)numberOfPosts);
    //gets the page from the querystring and sets it to one if it is out of range
    var page = 1;
    if (httpContext != null && !string.IsNullOrEmpty(httpContext.Request.Query["page"]))
    {
        int.TryParse(httpContext.Request.Query["page"], out page);
        if (page <= 0 || page > pageCount)
        {
            page = 1;
        }
    }
    //Gets the blogposts for the current page
    var pagedBlogposts = blogposts.Skip((page - 1) * numberOfPosts).Take(numberOfPosts).ToList();

    if (pagedBlogposts.Count > 0)
    {
        <div class="section--content-center">
            <div class="blogposts">
                @foreach (Blogpost post in pagedBlogposts)
                {
                    <a href="@post.Url(PublishedUrlProvider)" class="blogpost">
                        @if (post.HasValue("image"))
                        {
                            <img src="@post.Image.Url()" alt="@post.PageTitle" class="blogpost-image"/>
                        }
                        else
                        {
                            <div class="image-placeholder"></div>
                        }
                        <div class="blogpost-content">
                            <div class="blogpost-meta">
                                <small class="blogpost-date">@post.CreateDate.ToShortDateString()</small>
                            </div>
                            <h3 class="blogpost-title">@post.PageTitle</h3>
                            <div class="blogpost-excerpt">@post.Excerpt</div>
                        </div>

                    </a>
                }
            </div>
        </div>
    }

    if (blogposts.Count > numberOfPosts)
    {
        <div class="section--content-center">
            <div class="button button--border--dark" id="loadMore" data-current-page="@(page)" data-max-page="@(pageCount)"> Load More </div>
        </div>
    }
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
$(document).ready(function() {
    $('#loadMore').click(function() {
        let currentPage = parseInt($(this).data('current-page'));
        let maxPage = parseInt($(this).data('max-page'));
        let nextPage = currentPage + 1;

        if(nextPage <= maxPage) {
            $.get(window.location.pathname + "?page=" + nextPage, function(data) {
                let posts = $(data).find('.blogpost');
                
                if(posts.length > 0) {
                    $('.blogposts').append(posts);
                    $('#loadMore').data('current-page', nextPage);

                    if (nextPage === maxPage) {
                        $('#loadMore').hide();
                    }
                } else {
                    $('#loadMore').hide();
                }
            });
        } else {
            $('#loadMore').hide();
        }
    });
});
</script>